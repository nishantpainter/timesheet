{"version":3,"sources":["Timesheet/services/StorageService.js","Timesheet/types/index.tsx","Timesheet/providers/StoreProvider.tsx","Timesheet/components/TimesheetLineInfo.tsx","Timesheet/components/IconButton.tsx","Timesheet/components/TimesheetLine.tsx","Timesheet/components/TimesheetLineList.tsx","Timesheet/components/TimesheetLineControl.tsx","Timesheet/components/ImperativeTimeInfo.tsx","Timesheet/components/ImperativeTimeControl.tsx","Timesheet/containers/Sheet.tsx","Timesheet/containers/Content.tsx","Timesheet/components/DownloadIconButton.tsx","Timesheet/components/InfoPopover.tsx","Timesheet/providers/ThemeProvider.tsx","Timesheet/containers/Toolbar.tsx","Timesheet/providers/SnackbarProvider.tsx","Timesheet/index.tsx","serviceWorker.ts","index.tsx"],"names":["getItem","key","JSON","parse","localStorage","setItem","value","stringify","DownloadExtension","getDarkMode","setDarkMode","setLines","getLines","setImperative","getImperative","defaultLines","StoreContext","React","createContext","useStore","useContext","StoreProvider","props","children","useSnackbar","enqueueSnackbar","closeSnackbar","useState","lines","StorageService","imperative","handleUpdateStorageLines","useCallback","handleAddNewLine","updatedLines","id","uuid","title","hours","variant","handleDeleteAllLines","handleDeleteLine","event","line","action","Button","color","size","onClick","filter","l","handleChangeLine","target","name","test","map","handleChangeImperative","checked","useEffect","length","fetchLines","useMemo","Provider","useStyles","makeStyles","theme","totalHours","palette","primary","main","TimesheetLineInfo","classes","moment","Date","format","date","Box","display","alignItems","height","padding","marginBottom","width","justifyContent","Typography","className","toFixed","icons","info","InfoIcon","brightness","BrightnessIcon","download","SaveAltIcon","delete","DeleteIcon","question","HelpIcon","add","AddIcon","timesheet","AssignmentIcon","IconButton","forwardRef","ref","icon","rest","Icon","TimesheetLine","onDelete","onChange","handleDelete","e","handleChange","persist","Grid","container","spacing","item","xs","sm","TextField","placeholder","multiline","fullWidth","listWrapper","overflow","TimesheetLineList","button","marginRight","TimesheetLineControl","onAdd","ImperativeTimeInfo","Tooltip","imperativeFormControl","ImperativeTimeControl","FormControlLabel","control","Checkbox","root","label","List","handleDeleteAllLinesStore","confirmationDialogOpen","setConfirmationDialogOpen","handleOpenConfirmationDialog","handleCloseConfirmationDialog","reduce","Number","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","toolbar","minHeight","maxWidth","marginLeft","Content","component","Sheet","DownloadIconButton","onDownload","anchorEl","setAnchorEl","handleCloseMenu","currentTarget","Menu","Boolean","MenuItem","preventDefault","TXT","CSV","PDF","popoverPaper","link","divider","check","text","Check","role","aria-label","InfoPopover","Popover","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","gutterBottom","Divider","light","Link","href","ThemeContext","ThemeProvider","darkTheme","setDarkTheme","handleToggleDarkTheme","createMuiTheme","type","teal","secondary","blueGrey","CssBaseline","iconButton","Toolbar","handleOpenInfo","handleCloseInfo","handleDownloadFile","blob","fileName","url","window","URL","createObjectURL","document","createElement","setAttribute","click","handleGetDate","handleGetFileName","extension","toLowerCase","handleGetTotalHours","handleGetFormattedText","txt","handleDownloadTxt","Blob","handleDownloadCsv","handleDownloadPdf","doc","jsPDF","save","handleDownload","fileType","AppBar","flexGrow","SnackbarProvider","notistackRef","createRef","onClickDismiss","current","autoHideDuration","maxSnack","Timesheet","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a50e1db4.chunk.js","sourcesContent":["const DARK_MODE = \"dark_mode\";\nconst LINES = \"lines\";\nconst IMPERATIVE = \"imperative\";\n\nexport function getItem(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport function setItem(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getDarkMode() {\n  return getItem(DARK_MODE);\n}\n\nexport function setDarkMode(value) {\n  return setItem(DARK_MODE, value);\n}\n\nexport function setLines(value) {\n  return setItem(LINES, value);\n}\n\nexport function getLines() {\n  return getItem(LINES);\n}\n\nexport function setImperative(value) {\n  return setItem(IMPERATIVE, value);\n}\n\nexport function getImperative() {\n  return getItem(IMPERATIVE);\n}\n\nexport default {\n  getItem,\n  setItem,\n  getDarkMode,\n  setDarkMode,\n  setLines,\n  getLines,\n  setImperative,\n  getImperative,\n};\n","export type Line = {\n  id: string;\n  title: string;\n  hours: string;\n};\n\nexport enum DownloadExtension {\n  TXT = \"txt\",\n  CSV = \"csv\",\n  PDF = \"pdf\",\n}\n","import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { useSnackbar } from \"notistack\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Line } from \"../types\";\nimport StorageService from \"../services/StorageService\";\n\ntype StoreContextType = {\n  lines: Line[];\n  imperative: boolean;\n  handleChangeLine: any;\n  handleDeleteLine: any;\n  handleDeleteAllLines: any;\n  handleAddNewLine: any;\n  handleChangeImperative: any;\n};\n\nconst defaultLines: Line[] = [];\n\nconst StoreContext = React.createContext<Partial<StoreContextType>>({});\n\nconst StoreProvider = (props: any) => {\n  const { children } = props;\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [lines, setLines] = React.useState(defaultLines);\n  const [imperative, setImperative] = React.useState(\n    StorageService.getImperative()\n  );\n\n  const fetchLines = () => {\n    const lines = StorageService.getLines();\n    if (lines && lines.length) {\n      setLines(lines);\n    }\n  };\n\n  const handleUpdateStorageLines = React.useCallback((lines) => {\n    StorageService.setLines(lines);\n  }, []);\n\n  const handleAddNewLine = React.useCallback(() => {\n    setLines((lines: Line[]) => {\n      const updatedLines = [...lines, { id: uuid(), title: \"\", hours: \"\" }];\n      handleUpdateStorageLines(updatedLines);\n      enqueueSnackbar(\"Line Added\", { variant: \"success\" });\n      return updatedLines;\n    });\n  }, [handleUpdateStorageLines, enqueueSnackbar]);\n\n  const handleDeleteAllLines = React.useCallback(() => {\n    setLines([]);\n    handleUpdateStorageLines([]);\n    enqueueSnackbar(\"All Line Deleted\");\n  }, [handleUpdateStorageLines, enqueueSnackbar]);\n\n  const handleDeleteLine = React.useCallback(\n    (event, line: Line) => {\n      const action = (key: any) => (\n        <>\n          <Button\n            color=\"secondary\"\n            size=\"small\"\n            onClick={() => {\n              setLines((lines) => {\n                const updatedLines = [...lines, line];\n                handleUpdateStorageLines(updatedLines);\n                return updatedLines;\n              });\n              closeSnackbar(key);\n            }}\n          >\n            Undo\n          </Button>\n          <Button\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              closeSnackbar(key);\n            }}\n          >\n            Dismiss\n          </Button>\n        </>\n      );\n\n      setLines((lines) => {\n        const updatedLines = lines.filter((l) => l.id !== line.id);\n        handleUpdateStorageLines(updatedLines);\n        enqueueSnackbar(\"Line Deleted\", {\n          action,\n        });\n        return updatedLines;\n      });\n    },\n    [handleUpdateStorageLines, enqueueSnackbar, closeSnackbar]\n  );\n\n  const handleChangeLine = React.useCallback(\n    (event, line) => {\n      const { name, value } = event.target;\n\n      const declarativeTimeRegex = /^\\d*\\.?[0-5]?((?<=[0-5])[0-9]?)?$/;\n      const imperativeTimeRegex = /^\\d*\\.?\\d*$/;\n\n      const timeRegex = imperative ? imperativeTimeRegex : declarativeTimeRegex;\n\n      if (name === \"hours\" && !timeRegex.test(value)) {\n        return;\n      }\n\n      setLines((lines) => {\n        const updatedLines = lines.map((l) =>\n          l.id === line.id ? { ...line, [name]: value } : l\n        );\n        handleUpdateStorageLines(updatedLines);\n        return updatedLines;\n      });\n    },\n    [imperative, handleUpdateStorageLines]\n  );\n\n  const handleChangeImperative = React.useCallback((event) => {\n    const { checked } = event.target;\n    setImperative(checked);\n    StorageService.setImperative(checked);\n  }, []);\n\n  React.useEffect(() => fetchLines(), []);\n\n  const value = React.useMemo(\n    () => ({\n      lines,\n      imperative,\n      handleChangeLine,\n      handleDeleteLine,\n      handleDeleteAllLines,\n      handleAddNewLine,\n      handleChangeImperative,\n    }),\n    [\n      lines,\n      imperative,\n      handleChangeLine,\n      handleDeleteLine,\n      handleDeleteAllLines,\n      handleAddNewLine,\n      handleChangeImperative,\n    ]\n  );\n\n  return (\n    <StoreContext.Provider value={value}>{children}</StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => React.useContext(StoreContext);\n\nexport default StoreProvider;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  totalHours: {\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst getDate = () => moment(new Date()).format(\"DD-MMM-YYYY\"); //HH:mm:ss\n\ntype TimesheetLineInfoProps = {\n  totalHours: number;\n};\n\nconst TimesheetLineInfo: React.FC<TimesheetLineInfoProps> = (props) => {\n  const { totalHours } = props;\n\n  const classes = useStyles();\n  const [date] = React.useState(getDate());\n\n  /*\n  const handleUpdateDate = React.useCallback(() => {\n    setDate(getDate());\n  }, []);\n\n  React.useEffect(() => {\n    const interval = setInterval(handleUpdateDate, 1000);\n    return () => clearInterval(interval);\n  }, [handleUpdateDate]);\n  */\n\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      height={32}\n      padding={1.5}\n      marginBottom={0.5}\n      width=\"98%\"\n      justifyContent=\"space-between\"\n    >\n      <Typography>\n        <b>{date}</b>\n      </Typography>\n      &nbsp;&nbsp;\n      <Typography>\n        <b>\n          Total Hours&nbsp;:&nbsp;\n          <span className={classes.totalHours}>{totalHours.toFixed(2)}</span>\n        </b>\n      </Typography>\n    </Box>\n  );\n};\n\nexport default TimesheetLineInfo;\n","import React from \"react\";\nimport MuiIconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport BrightnessIcon from \"@material-ui/icons/Brightness4\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\n\nconst icons = {\n  info: InfoIcon,\n  brightness: BrightnessIcon,\n  download: SaveAltIcon,\n  delete: DeleteIcon,\n  question: HelpIcon,\n  add: AddIcon,\n  timesheet: AssignmentIcon,\n};\n\ntype IconButtonProps = MuiIconButtonProps & { icon: keyof typeof icons };\n\nconst IconButton: React.FC<IconButtonProps> = React.forwardRef((props, ref) => {\n  const { icon, ...rest } = props;\n  const Icon = icons[icon];\n\n  return (\n    <MuiIconButton size=\"small\" ref={ref} {...rest}>\n      <Icon />\n    </MuiIconButton>\n  );\n});\n\nexport default IconButton;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Line } from \"../types\";\nimport IconButton from \"../components/IconButton\";\n\ntype TimesheetLineProps = {\n  line: Line;\n  onDelete: any;\n  onChange: any;\n};\n\nconst TimesheetLine: React.FC<TimesheetLineProps> = (props) => {\n  const { line, onDelete, onChange } = props;\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete(e, line);\n    },\n    [line, onDelete]\n  );\n\n  const handleChange = React.useCallback(\n    (e) => {\n      e.persist();\n      onChange(e, line);\n    },\n    [line, onChange]\n  );\n\n  return (\n    <Grid container spacing={1} alignItems=\"flex-start\">\n      <Grid item xs={8} sm={9}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Title\"\n          name=\"title\"\n          value={line.title}\n          onChange={handleChange}\n          multiline\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={3} sm={2}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Hours\"\n          name=\"hours\"\n          value={line.hours}\n          onChange={handleChange}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={1} sm={1}>\n        <IconButton\n          icon=\"delete\"\n          color=\"secondary\"\n          onClick={handleDelete}\n        ></IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TimesheetLine;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TimesheetLine from \"./TimesheetLine\";\nimport { Line } from \"../types\";\n\ntype TimesheetLineListProps = {\n  lines: Line[];\n  onDelete: any;\n  onChange: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  listWrapper: {\n    padding: theme.spacing(1.5),\n    height: `calc(100% - ${theme.spacing(6)}px)`,\n    overflow: \"auto\",\n  },\n}));\n\nconst TimesheetLineList: React.FC<TimesheetLineListProps> = (props) => {\n  const classes = useStyles();\n\n  const { lines, onDelete, onChange } = props;\n  return (\n    <Box className={classes.listWrapper}>\n      <Grid container spacing={1}>\n        {lines.map((line) => (\n          <Grid item xs={12} key={line.id}>\n            <TimesheetLine\n              line={line}\n              onDelete={onDelete}\n              onChange={onChange}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TimesheetLineList;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: { marginRight: theme.spacing() },\n}));\n\ntype TimesheetLineControlProps = {\n  onAdd: any;\n  onDelete: any;\n};\n\nconst TimesheetLineControl: React.FC<TimesheetLineControlProps> = (props) => {\n  const { onAdd, onDelete } = props;\n\n  const classes = useStyles();\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      height={32}\n      marginBottom={1}\n      padding={1.5}\n    >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={classes.button}\n        onClick={onAdd}\n      >\n        Add\n      </Button>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        size=\"small\"\n        className={classes.button}\n        onClick={onDelete}\n      >\n        Delete\n      </Button>\n    </Box>\n  );\n};\n\nexport default TimesheetLineControl;\n","import React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport IconButton from \"./IconButton\";\n\ntype ImperativeTimeInfoProps = {};\n\nconst ImperativeTimeInfo: React.FC<ImperativeTimeInfoProps> = (props) => {\n  return (\n    <>\n      <Tooltip title=\"1 hour = 1.00; 30 mins = 0.50; 15 mins = 0.25; Or simply follow any other convention you needed.\">\n        <IconButton icon=\"question\"></IconButton>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default ImperativeTimeInfo;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport ImperativeTimeInfo from \"./ImperativeTimeInfo\";\n\nconst useStyles = makeStyles((theme) => ({\n  imperativeFormControl: {\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\ntype ImperativeTimeControlProps = {\n  checked: boolean | undefined;\n  onChange: any;\n};\n\nconst ImperativeTimeControl: React.FC<ImperativeTimeControlProps> = (props) => {\n  const { checked, onChange } = props;\n\n  const classes = useStyles();\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      height={32}\n      marginBottom={1}\n      padding={1.5}\n    >\n      <FormControlLabel\n        control={\n          <Checkbox checked={checked} onChange={onChange} color=\"primary\" />\n        }\n        classes={{ root: classes.imperativeFormControl }}\n        label=\"Imperative Time\"\n      />\n      &nbsp;\n      <ImperativeTimeInfo />\n    </Box>\n  );\n};\n\nexport default ImperativeTimeControl;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport { useStore } from \"../providers/StoreProvider\";\nimport TimesheetLineInfo from \"../components/TimesheetLineInfo\";\nimport TimesheetLineList from \"../components/TimesheetLineList\";\nimport TimesheetLineControl from \"../components/TimesheetLineControl\";\nimport ImperativeTimeControl from \"../components/ImperativeTimeControl\";\n\ntype ListProps = {};\n\nconst List: React.FC<ListProps> = (props) => {\n  const {\n    lines = [],\n    imperative,\n    handleAddNewLine,\n    handleChangeLine,\n    handleDeleteLine,\n    handleDeleteAllLines: handleDeleteAllLinesStore,\n    handleChangeImperative,\n  } = useStore();\n\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = React.useState<\n    boolean\n  >(false);\n\n  const handleOpenConfirmationDialog = React.useCallback(() => {\n    if (!(lines && lines.length)) {\n      return;\n    }\n    setConfirmationDialogOpen(true);\n  }, [lines]);\n\n  const handleCloseConfirmationDialog = React.useCallback(() => {\n    setConfirmationDialogOpen(false);\n  }, []);\n\n  const handleDeleteAllLines = React.useCallback(() => {\n    handleDeleteAllLinesStore();\n    handleCloseConfirmationDialog();\n  }, [handleDeleteAllLinesStore, handleCloseConfirmationDialog]);\n\n  const totalHours = lines.reduce(\n    (totalHours, line) => totalHours + (Number(line.hours) || 0),\n    0\n  );\n\n  return (\n    <>\n      <TimesheetLineControl\n        onAdd={handleAddNewLine}\n        onDelete={handleOpenConfirmationDialog}\n      />\n      <ImperativeTimeControl\n        checked={imperative}\n        onChange={handleChangeImperative}\n      />\n      <TimesheetLineInfo totalHours={totalHours} />\n      <TimesheetLineList\n        lines={lines}\n        onDelete={handleDeleteLine}\n        onChange={handleChangeLine}\n      />\n      <Dialog\n        open={confirmationDialogOpen}\n        onClose={handleCloseConfirmationDialog}\n      >\n        <DialogTitle>Delete</DialogTitle>\n        <DialogContent>\n          <Typography>Do you want to delete all timesheet lines ?</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"small\" onClick={handleCloseConfirmationDialog}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={handleDeleteAllLines}>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Sheet from \"./Sheet\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    minHeight: theme.spacing(6),\n  },\n  main: {\n    padding: theme.spacing(2),\n    maxWidth: theme.spacing(70),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    height: `calc(100% - ${theme.spacing(14.5)}px)`,\n  },\n}));\n\ntype ContentProps = {};\n\nconst Content: React.FC<ContentProps> = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.toolbar} />\n      <Box component=\"main\" className={classes.main}>\n        <Sheet />\n      </Box>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\n\nimport IconButton from \"./IconButton\";\nimport { DownloadExtension } from \"../types\";\n\ntype DownloadIconButtonProps = IconButtonProps & {\n  onDownload: any;\n};\n\nconst DownloadIconButton: React.FC<DownloadIconButtonProps> = (props) => {\n  const { onDownload, ...rest } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDownloadTXT = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.TXT);\n  };\n\n  const handleDowloadCSV = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.CSV);\n  };\n\n  const handleDownloadPDF = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.PDF);\n  };\n\n  return (\n    <>\n      <IconButton\n        icon=\"download\"\n        {...rest}\n        onClick={handleOpenMenu}\n      ></IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={handleDownloadTXT}>TXT File</MenuItem>\n        <MenuItem onClick={handleDowloadCSV}>CSV File</MenuItem>\n        <MenuItem onClick={handleDownloadPDF}>PDF File</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default DownloadIconButton;\n","import React from \"react\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Popover, {\n  PopoverProps as InfoPopoverProps,\n} from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  popoverPaper: {\n    width: 500,\n    padding: theme.spacing(2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n  },\n  divider: {\n    marginBottom: theme.spacing(),\n  },\n  check: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst Check = () => {\n  const classes = useStyles();\n\n  return (\n    <span role=\"img\" aria-label=\"check\" className={classes.check}>\n      ✅\n    </span>\n  );\n};\n\nconst InfoPopover: React.FC<InfoPopoverProps> = (props) => {\n  const { open, anchorEl, onClose } = props;\n\n  const classes = useStyles();\n  return (\n    <Popover\n      open={open}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      PaperProps={{\n        className: classes.popoverPaper,\n      }}\n    >\n      <Typography gutterBottom>\n        Timesheet is a small application for managing daily task work time and\n        to evaluate total hours of work.\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Hassle-free access to your timesheet lines\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Instant overview of total time hours\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Dark mode\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Works Offline\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Download timesheet in TXT, CSV and PDF format\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography gutterBottom>\n        The application works offline and can be used by using&nbsp;\n        <i>'Add to home screen'</i>&nbsp;option from browser setting on mobile\n        devices.\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography gutterBottom>\n        The application do not store any consumer data and use local storage for\n        persisting the information. Timesheet is&nbsp;\n        <Link\n          color=\"primary\"\n          href=\"https://github.com/nishantpainter/timesheet\"\n          target=\"_blank\"\n        >\n          Open-source\n        </Link>\n        . Pull request are welcome!\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography>\n        Developed By :&nbsp;\n        <Link\n          color=\"primary\"\n          href=\"https://nishantpainter.github.io/\"\n          target=\"_blank\"\n        >\n          Nishant Painter\n        </Link>\n      </Typography>\n    </Popover>\n  );\n};\n\nexport default InfoPopover;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport teal from \"@material-ui/core/colors/teal\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\n\nimport StorageService from \"../services/StorageService\";\n\nconst ThemeContext = React.createContext({});\n\ntype ThemeProviderProps = {};\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\n  const { children } = props;\n\n  const [darkTheme, setDarkTheme] = React.useState(\n    StorageService.getDarkMode()\n  );\n\n  const handleToggleDarkTheme = React.useCallback(() => {\n    setDarkTheme((darkTheme: Boolean) => {\n      StorageService.setDarkMode(!darkTheme);\n      return !darkTheme;\n    });\n  }, []);\n\n  const theme: Theme = createMuiTheme({\n    palette: {\n      type: darkTheme ? \"dark\" : \"light\",\n      primary: teal,\n      secondary: blueGrey,\n    },\n  });\n\n  const value = React.useMemo(\n    () => ({\n      handleToggleDarkTheme,\n    }),\n    [handleToggleDarkTheme]\n  );\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): any => React.useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport moment from \"moment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsPDF } from \"jspdf\";\n\nimport DownloadIconButton from \"../components/DownloadIconButton\";\nimport IconButton from \"../components/IconButton\";\nimport InfoPopover from \"../components/InfoPopover\";\nimport { useTheme } from \"../providers/ThemeProvider\";\nimport { useStore } from \"../providers/StoreProvider\";\nimport { DownloadExtension, Line } from \"../types\";\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\ntype ToolbarProps = {};\n\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\n  const classes = useStyles();\n  const { handleToggleDarkTheme } = useTheme();\n\n  const { lines = [] } = useStore();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n\n  const handleOpenInfo = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    },\n    []\n  );\n\n  const handleCloseInfo = React.useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleDownloadFile = React.useCallback(\n    (blob: Blob, fileName: string) => {\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      link.click();\n    },\n    []\n  );\n\n  const handleGetDate = React.useCallback((format: string = \"DD MMM YYYY\") => {\n    return moment().format(format);\n  }, []);\n\n  const handleGetFileName = React.useCallback(\n    (extension: DownloadExtension) => {\n      return handleGetDate() + `.${extension.toLowerCase()}`;\n    },\n    [handleGetDate]\n  );\n\n  const handleGetTotalHours = React.useCallback(() => {\n    const totalHours = lines.reduce(\n      (totalHours, line) => totalHours + (Number(line.hours) || 0),\n      0\n    );\n    return totalHours;\n  }, [lines]);\n\n  const handleGetFormattedText = React.useCallback(\n    (extension: DownloadExtension) => {\n      switch (extension) {\n        case DownloadExtension.PDF:\n        case DownloadExtension.TXT: {\n          const txt: string = lines.reduce(\n            (txt: string, line: Line): string => {\n              if (line.title || line.hours) {\n                txt += `${line.title || \"\"} - ${line.hours || \"0\"}\\n`;\n              }\n              return txt;\n            },\n            `Timesheet : ${handleGetDate()}; Total Hours : ${handleGetTotalHours()}\\n============================================\\n`\n          );\n          return txt;\n        }\n        case DownloadExtension.CSV: {\n          const txt: string = lines.reduce(\n            (txt: string, line: Line): string => {\n              if (line.title || line.hours) {\n                txt += `\"${line.title || \"\"}\",\"${line.hours || \"0\"}\"\\n`;\n              }\n              return txt;\n            },\n            '\"Title\",\"Hours\"\\n'\n          );\n          return txt;\n        }\n        default:\n          return \"\";\n      }\n    },\n    [lines, handleGetDate, handleGetTotalHours]\n  );\n\n  const handleDownloadTxt = React.useCallback(() => {\n    const txt = handleGetFormattedText(DownloadExtension.TXT);\n    const blob = new Blob([txt], { type: \"text/plain\" });\n    handleDownloadFile(blob, handleGetFileName(DownloadExtension.TXT));\n  }, [handleGetFormattedText, handleDownloadFile, handleGetFileName]);\n\n  const handleDownloadCsv = React.useCallback(() => {\n    const txt = handleGetFormattedText(DownloadExtension.CSV);\n    const blob = new Blob([txt], { type: \"text/plain\" });\n    handleDownloadFile(blob, handleGetFileName(DownloadExtension.CSV));\n  }, [handleGetFormattedText, handleDownloadFile, handleGetFileName]);\n\n  const handleDownloadPdf = React.useCallback(() => {\n    const txt = handleGetFormattedText(DownloadExtension.PDF);\n    const doc = new jsPDF();\n    doc.text(txt, 10, 10);\n    doc.save(handleGetFileName(DownloadExtension.PDF));\n  }, [handleGetFormattedText, handleGetFileName]);\n\n  const handleDownload = React.useCallback(\n    (fileType) => {\n      switch (fileType) {\n        case DownloadExtension.TXT:\n          handleDownloadTxt();\n          break;\n        case DownloadExtension.CSV:\n          handleDownloadCsv();\n          break;\n        case DownloadExtension.PDF:\n          handleDownloadPdf();\n          break;\n        default:\n          return;\n      }\n    },\n    [handleDownloadTxt, handleDownloadCsv, handleDownloadPdf]\n  );\n\n  return (\n    <AppBar color=\"default\">\n      <MuiToolbar variant=\"dense\">\n        <Box display=\"flex\" flexGrow={1} alignItems=\"center\">\n          <IconButton icon=\"timesheet\" color='primary' />\n          <Typography color=\"primary\">\n            <b>Timesheet</b>\n          </Typography>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconButton\n            icon=\"brightness\"\n            color=\"primary\"\n            className={classes.iconButton}\n            onClick={handleToggleDarkTheme}\n          />\n          <DownloadIconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            onDownload={handleDownload}\n          />\n          <IconButton icon=\"info\" color=\"secondary\" onClick={handleOpenInfo} />\n        </Box>\n        <InfoPopover\n          open={Boolean(anchorEl)}\n          anchorEl={anchorEl}\n          onClose={handleCloseInfo}\n        />\n      </MuiToolbar>\n    </AppBar>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { SnackbarProvider as NotiStackProvider } from \"notistack\";\n\ntype SnackbarProviderProps = {};\n\nconst SnackbarProvider: React.FC<SnackbarProviderProps> = (props) => {\n  const { children } = props;\n\n  const notistackRef: any = React.createRef();\n\n  const onClickDismiss = (key: any) => () => {\n    notistackRef.current.closeSnackbar(key);\n  };\n\n  return (\n    <NotiStackProvider\n      autoHideDuration={2000}\n      maxSnack={3}\n      ref={notistackRef}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      action={(key) => (\n        <Button color=\"inherit\" size=\"small\" onClick={onClickDismiss(key)}>\n          Dismiss\n        </Button>\n      )}\n    >\n      {children}\n    </NotiStackProvider>\n  );\n};\n\nexport default SnackbarProvider;\n","import React from \"react\";\n\nimport Content from \"./containers/Content\";\nimport Toolbar from \"./containers/Toolbar\";\nimport ThemeProvider from \"./providers/ThemeProvider\";\nimport StoreProvider from \"./providers/StoreProvider\";\nimport SnackbarProvider from \"./providers/SnackbarProvider\";\n\ntype TimeSheetProps = {};\n\nconst Timesheet: React.FC<TimeSheetProps> = () => {\n  return (\n    <ThemeProvider>\n      <SnackbarProvider>\n        <StoreProvider>\n          <Toolbar />\n          <Content />\n        </StoreProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default Timesheet;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Timesheet from \"./Timesheet\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Timesheet />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}