{"version":3,"sources":["Timesheet/services/StorageService.js","Timesheet/types/index.tsx","Timesheet/components/IconButton.tsx","Timesheet/components/TimesheetLine.tsx","Timesheet/components/TimesheetLineList.tsx","Timesheet/containers/Sheet.tsx","Timesheet/containers/Content.tsx","Timesheet/components/DownloadIconButton.tsx","Timesheet/components/InfoPopover.tsx","Timesheet/providers/ThemeProvider.tsx","Timesheet/containers/Toolbar.tsx","Timesheet/index.tsx","serviceWorker.ts","index.tsx"],"names":["getItem","key","JSON","parse","localStorage","setItem","value","stringify","DownloadExtension","getDarkMode","setDarkMode","setLines","getLines","icons","info","InfoIcon","brightness","BrightnessIcon","download","SaveAltIcon","delete","DeleteIcon","IconButton","props","icon","rest","Icon","size","TimesheetLine","line","onDelete","onChange","handleDelete","React","useCallback","e","handleChange","persist","Grid","container","spacing","alignItems","item","xs","sm","TextField","variant","placeholder","name","title","fullWidth","hours","color","onClick","useStyles","makeStyles","theme","listWrapper","padding","height","overflow","TimesheetLineList","classes","lines","Box","className","map","id","defaultLines","button","marginRight","List","useState","handleAddNewLine","uuid","handleDeleteAllLines","handleDeleteLine","event","filter","l","handleChangeLine","target","test","useEffect","StorageService","length","fetchLines","totalHours","reduce","Number","display","marginBottom","Button","Typography","toFixed","toolbar","minHeight","main","maxWidth","marginLeft","Content","component","Sheet","DownloadIconButton","onDownload","anchorEl","setAnchorEl","handleCloseMenu","currentTarget","Menu","open","Boolean","onClose","MenuItem","preventDefault","TXT","CSV","PDF","popoverPaper","width","link","palette","primary","divider","check","text","Check","role","aria-label","InfoPopover","Popover","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","gutterBottom","Divider","light","Link","href","ThemeContext","createContext","ThemeProvider","children","darkTheme","setDarkTheme","handleToggleDarkTheme","createMuiTheme","type","teal","secondary","blueGrey","useMemo","Provider","CssBaseline","iconButton","getDate","moment","Date","format","Toolbar","useContext","date","setDate","handleOpenInfo","handleCloseInfo","handleUpdateDate","handleDownloadTxt","handleDownloadCsv","handleDownloadPdf","handleDownload","fileType","interval","setInterval","clearInterval","AppBar","flexGrow","Timesheet","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d6665b4c.chunk.js","sourcesContent":["const DARK_MODE = \"dark_mode\";\nconst LINES = \"lines\";\n\nexport function getItem(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport function setItem(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getDarkMode() {\n  return getItem(DARK_MODE);\n}\n\nexport function setDarkMode(value) {\n  return setItem(DARK_MODE, value);\n}\n\nexport function setLines(value) {\n  return setItem(LINES, value);\n}\n\nexport function getLines() {\n  return getItem(LINES);\n}\n\nexport default {\n  getItem,\n  setItem,\n  getDarkMode,\n  setDarkMode,\n  setLines,\n  getLines,\n};\n","export type Line = {\n  id: string;\n  title: string;\n  hours: string;\n};\n\nexport enum DownloadExtension {\n  TXT = \"txt\",\n  CSV = \"csv\",\n  PDF = \"pdf\",\n}\n","import React from \"react\";\nimport MuiIconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport BrightnessIcon from \"@material-ui/icons/Brightness6\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst icons = {\n  info: InfoIcon,\n  brightness: BrightnessIcon,\n  download: SaveAltIcon,\n  delete: DeleteIcon,\n};\n\ntype IconButtonProps = MuiIconButtonProps & { icon: keyof typeof icons };\n\nconst IconButton: React.FC<IconButtonProps> = (props) => {\n  const { icon, ...rest } = props;\n  const Icon = icons[icon];\n\n  return (\n    <MuiIconButton size=\"small\" {...rest}>\n      <Icon />\n    </MuiIconButton>\n  );\n};\n\nexport default IconButton;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Line } from \"../types\";\nimport IconButton from \"../components/IconButton\";\n\ntype TimesheetLineProps = {\n  line: Line;\n  onDelete: any;\n  onChange: any;\n};\n\nconst TimesheetLine: React.FC<TimesheetLineProps> = (props) => {\n  const { line, onDelete, onChange } = props;\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete(e, line);\n    },\n    [line, onDelete]\n  );\n\n  const handleChange = React.useCallback(\n    (e) => {\n      e.persist();\n      onChange(e, line);\n    },\n    [line, onChange]\n  );\n\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item xs={7} sm={9}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Title\"\n          name=\"title\"\n          value={line.title}\n          onChange={handleChange}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={4} sm={2}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Hours\"\n          name=\"hours\"\n          value={line.hours}\n          onChange={handleChange}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={1} sm={1}>\n        <IconButton\n          icon=\"delete\"\n          color=\"secondary\"\n          onClick={handleDelete}\n        ></IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TimesheetLine;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TimesheetLine from \"./TimesheetLine\";\nimport { Line } from \"../types\";\n\ntype TimesheetLineListProps = {\n  lines: Line[];\n  onDelete: any;\n  onChange: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  listWrapper: {\n    padding: theme.spacing(),\n    height: `calc(100% - ${theme.spacing(6)}px)`,\n    overflow: \"auto\",\n  },\n}));\n\nconst TimesheetLineList: React.FC<TimesheetLineListProps> = (props) => {\n  const classes = useStyles();\n\n  const { lines, onDelete, onChange } = props;\n  return (\n    <Box className={classes.listWrapper}>\n      <Grid container spacing={1}>\n        {lines.map((line) => (\n          <Grid item xs={12} key={line.id}>\n            <TimesheetLine\n              line={line}\n              onDelete={onDelete}\n              onChange={onChange}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TimesheetLineList;\n","import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Line } from \"../types\";\nimport StorageService from \"../services/StorageService\";\nimport TimesheetLineList from \"../components/TimesheetLineList\";\n\ntype ListProps = {};\n\nconst defaultLines: Line[] = [];\n\nconst useStyles = makeStyles((theme) => ({\n  button: { marginRight: theme.spacing() },\n}));\n\nconst List: React.FC<ListProps> = (props) => {\n  const classes = useStyles();\n\n  const [lines, setLines] = React.useState(defaultLines);\n\n  const fetchLines = () => {\n    const lines = StorageService.getLines();\n    if (lines && lines.length) {\n      setLines(lines);\n    }\n  };\n\n  const handleAddNewLine = React.useCallback(() => {\n    setLines((lines: Line[]) => [\n      ...lines,\n      { id: uuid(), title: \"\", hours: \"\" },\n    ]);\n  }, []);\n\n  const handleDeleteAllLines = React.useCallback(() => {}, []);\n\n  const handleDeleteLine = React.useCallback((event, line) => {\n    setLines((lines) => lines.filter((l) => l.id !== line.id));\n  }, []);\n\n  const handleChangeLine = React.useCallback((event, line) => {\n    const { name, value } = event.target;\n\n    const declarativeTimeRegex = /^\\d*\\.?[0-5]?((?<=[0-5])[0-9]?)?$/;\n\n    if (name === \"hours\" && !declarativeTimeRegex.test(value)) {\n      return;\n    }\n    setLines((lines) => {\n      return lines.map((l) =>\n        l.id === line.id ? { ...line, [name]: value } : l\n      );\n    });\n  }, []);\n\n  React.useEffect(() => fetchLines(), []);\n\n  const totalHours = lines.reduce(\n    (totalHours, line) => totalHours + Number(line.hours || 0),\n    0\n  );\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" height={40} marginBottom={1}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n          onClick={handleAddNewLine}\n        >\n          Add Line\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n          onClick={handleDeleteAllLines}\n        >\n          Delete All Lines\n        </Button>\n        <Typography>\n          Total Hours : <b>{totalHours.toFixed(2)}</b>\n        </Typography>\n      </Box>\n      <TimesheetLineList\n        lines={lines}\n        onDelete={handleDeleteLine}\n        onChange={handleChangeLine}\n      />\n    </>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Sheet from \"./Sheet\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    minHeight: theme.spacing(6),\n  },\n  main: {\n    padding: theme.spacing(2),\n    maxWidth: theme.spacing(70),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    height: `calc(100% - ${theme.spacing(6)}px)`,\n  },\n}));\n\ntype ContentProps = {};\n\nconst Content: React.FC<ContentProps> = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.toolbar} />\n      <Box component=\"main\" className={classes.main}>\n        <Sheet />\n      </Box>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\n\nimport IconButton from \"./IconButton\";\nimport { DownloadExtension } from \"../types\";\n\ntype DownloadIconButtonProps = IconButtonProps & {\n  onDownload: any;\n};\n\nconst DownloadIconButton: React.FC<DownloadIconButtonProps> = (props) => {\n  const { onDownload, ...rest } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDownloadTXT = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.TXT);\n  };\n\n  const handleDowloadCSV = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.CSV);\n  };\n\n  const handleDownloadPDF = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.PDF);\n  };\n\n  return (\n    <>\n      <IconButton\n        icon=\"download\"\n        {...rest}\n        onClick={handleOpenMenu}\n      ></IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={handleDownloadTXT}>TXT File</MenuItem>\n        <MenuItem onClick={handleDowloadCSV}>CSV File</MenuItem>\n        <MenuItem onClick={handleDownloadPDF}>PDF File</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default DownloadIconButton;\n","import React from \"react\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Popover, {\n  PopoverProps as InfoPopoverProps,\n} from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  popoverPaper: {\n    width: 400,\n    padding: theme.spacing(2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n  },\n  divider: {\n    marginBottom: theme.spacing(),\n  },\n  check: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst Check = () => {\n  const classes = useStyles();\n\n  return (\n    <span role=\"img\" aria-label=\"check\" className={classes.check}>\n      ✅\n    </span>\n  );\n};\n\nconst InfoPopover: React.FC<InfoPopoverProps> = (props) => {\n  const { open, anchorEl, onClose } = props;\n\n  const classes = useStyles();\n  return (\n    <Popover\n      open={open}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      PaperProps={{\n        className: classes.popoverPaper,\n      }}\n    >\n      <Typography gutterBottom>\n        Timesheet is a small application for managing daily task work time and\n        to evaluate total hours of work.\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Hassle-free access to your work sheet lines\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Instant overview of total hours done\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Download timesheet in txt, pdf and csv format\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography gutterBottom>\n        The application do not consume any consumer data and use local storage\n        for persisting the information. Timesheet is&nbsp;\n        <Link color=\"primary\" href=\"#\">\n          Open-source\n        </Link>\n        . Pull request are welcome!\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography>\n        Developed By :&nbsp;\n        <Link\n          color=\"primary\"\n          href=\"https://nishantpainter.github.io/\"\n          target=\"_blank\"\n        >\n          Nishant Painter\n        </Link>\n      </Typography>\n    </Popover>\n  );\n};\n\nexport default InfoPopover;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport teal from \"@material-ui/core/colors/teal\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\n\nimport StorageService from \"../services/StorageService\";\n\nconst ThemeContext = React.createContext({});\n\ntype ThemeProviderProps = {};\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\n  const { children } = props;\n\n  const [darkTheme, setDarkTheme] = React.useState(\n    StorageService.getDarkMode()\n  );\n\n  const handleToggleDarkTheme = React.useCallback(() => {\n    setDarkTheme((darkTheme: Boolean) => {\n      StorageService.setDarkMode(!darkTheme);\n      return !darkTheme;\n    });\n  }, []);\n\n  const theme: Theme = createMuiTheme({\n    palette: {\n      type: darkTheme ? \"dark\" : \"light\",\n      primary: teal,\n      secondary: blueGrey,\n    },\n  });\n\n  const value = React.useMemo(\n    () => ({\n      handleToggleDarkTheme,\n    }),\n    [handleToggleDarkTheme]\n  );\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): any => React.useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport moment from \"moment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport DownloadIconButton from \"../components/DownloadIconButton\";\nimport IconButton from \"../components/IconButton\";\nimport InfoPopover from \"../components/InfoPopover\";\nimport { useTheme } from \"../providers/ThemeProvider\";\nimport { DownloadExtension } from \"../types\";\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\ntype ToolbarProps = {};\n\nconst getDate = () => moment(new Date()).format(\"DD-MMM-YYYY HH:mm:ss\");\n\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\n  const classes = useStyles();\n  const { handleToggleDarkTheme } = useTheme();\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n  const [date, setDate] = React.useState(getDate());\n\n  const handleOpenInfo = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    },\n    []\n  );\n\n  const handleCloseInfo = React.useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleUpdateDate = React.useCallback(() => {\n    setDate(getDate());\n  }, []);\n\n  const handleDownloadTxt = React.useCallback((lines) => {}, []);\n\n  const handleDownloadCsv = React.useCallback((lines) => {}, []);\n\n  const handleDownloadPdf = React.useCallback((lines) => {}, []);\n\n  const handleDownload = React.useCallback(\n    (fileType) => {\n      switch (fileType) {\n        case DownloadExtension.TXT:\n          handleDownloadTxt([]);\n          break;\n        case DownloadExtension.CSV:\n          handleDownloadCsv([]);\n          break;\n        case DownloadExtension.PDF:\n          handleDownloadPdf([]);\n          break;\n        default:\n          return;\n      }\n    },\n    [handleDownloadTxt, handleDownloadCsv, handleDownloadPdf]\n  );\n\n  React.useEffect(() => {\n    const interval = setInterval(handleUpdateDate, 1000);\n    return () => clearInterval(interval);\n  }, [handleUpdateDate]);\n\n  return (\n    <AppBar color=\"default\">\n      <MuiToolbar variant=\"dense\">\n        <Box display=\"flex\" flexGrow={1} alignItems=\"center\">\n          <Typography color=\"primary\">\n            <b>TIMESHEET</b>\n          </Typography>\n          &nbsp;&nbsp;\n          <Typography variant=\"body2\">\n            <b>{date}</b>\n          </Typography>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconButton\n            icon=\"brightness\"\n            color=\"primary\"\n            className={classes.iconButton}\n            onClick={handleToggleDarkTheme}\n          />\n          <DownloadIconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            onDownload={handleDownload}\n          />\n          <IconButton icon=\"info\" color=\"secondary\" onClick={handleOpenInfo} />\n        </Box>\n        <InfoPopover\n          open={Boolean(anchorEl)}\n          anchorEl={anchorEl}\n          onClose={handleCloseInfo}\n        />\n      </MuiToolbar>\n    </AppBar>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\n\nimport Content from \"./containers/Content\";\nimport Toolbar from \"./containers/Toolbar\";\nimport ThemeProvider from \"./providers/ThemeProvider\";\n\ntype TimeSheetProps = {};\n\nconst Timesheet: React.FC<TimeSheetProps> = () => {\n  return (\n    <ThemeProvider>\n      <Toolbar />\n      <Content />\n    </ThemeProvider>\n  );\n};\n\nexport default Timesheet;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Timesheet from \"./Timesheet\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Timesheet />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}