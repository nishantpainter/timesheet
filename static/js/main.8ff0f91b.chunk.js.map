{"version":3,"sources":["Timesheet/services/StorageService.js","Timesheet/types/index.tsx","Timesheet/providers/StoreProvider.tsx","Timesheet/components/IconButton.tsx","Timesheet/components/TimesheetLine.tsx","Timesheet/components/TimesheetLineList.tsx","Timesheet/components/ImperativeTimeInfo.tsx","Timesheet/containers/Sheet.tsx","Timesheet/containers/Content.tsx","Timesheet/components/DownloadIconButton.tsx","Timesheet/components/InfoPopover.tsx","Timesheet/providers/ThemeProvider.tsx","Timesheet/containers/Toolbar.tsx","Timesheet/providers/SnackbarProvider.tsx","Timesheet/index.tsx","serviceWorker.ts","index.tsx"],"names":["getItem","key","JSON","parse","localStorage","setItem","value","stringify","DownloadExtension","getDarkMode","setDarkMode","setLines","getLines","setImperative","getImperative","defaultLines","StoreContext","React","createContext","useStore","useContext","StoreProvider","props","children","enqueueSnackbar","useSnackbar","useState","lines","StorageService","imperative","handleUpdateStorageLines","useCallback","handleAddNewLine","updatedLines","id","uuid","title","hours","variant","handleDeleteAllLines","handleDeleteLine","event","line","filter","l","handleChangeLine","target","name","test","map","handleChangeImperative","checked","useEffect","length","fetchLines","useMemo","Provider","icons","info","InfoIcon","brightness","BrightnessIcon","download","SaveAltIcon","delete","DeleteIcon","question","HelpIcon","add","AddIcon","IconButton","forwardRef","ref","icon","rest","Icon","size","TimesheetLine","onDelete","onChange","handleDelete","e","handleChange","persist","Grid","container","spacing","alignItems","item","xs","sm","TextField","placeholder","multiline","fullWidth","color","onClick","useStyles","makeStyles","theme","listWrapper","padding","height","overflow","TimesheetLineList","classes","Box","className","ImperativeTimeInfo","Tooltip","button","marginRight","imperativeFormControl","List","confirmationDialogOpen","setConfirmationDialogOpen","handleOpenConfirmationDialog","handleCloseConfirmationDialog","totalHours","reduce","Number","display","marginBottom","Button","Typography","toFixed","FormControlLabel","control","Checkbox","root","label","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","toolbar","minHeight","main","maxWidth","marginLeft","Content","component","Sheet","DownloadIconButton","onDownload","anchorEl","setAnchorEl","handleCloseMenu","currentTarget","Menu","Boolean","MenuItem","preventDefault","TXT","CSV","PDF","popoverPaper","width","link","palette","primary","divider","check","text","Check","role","aria-label","InfoPopover","Popover","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","gutterBottom","Divider","light","Link","href","ThemeContext","ThemeProvider","darkTheme","setDarkTheme","handleToggleDarkTheme","createMuiTheme","type","teal","secondary","blueGrey","CssBaseline","iconButton","getDate","moment","Date","format","Toolbar","date","setDate","handleOpenInfo","handleCloseInfo","handleUpdateDate","handleDownloadFile","blob","fileName","url","window","URL","createObjectURL","document","createElement","setAttribute","click","handleGetDate","handleGetFileName","extension","toLowerCase","handleGetFormattedText","txt","handleDownloadTxt","Blob","handleDownloadCsv","handleDownloadPdf","doc","jsPDF","save","handleDownload","fileType","interval","setInterval","clearInterval","AppBar","flexGrow","SnackbarProvider","notistackRef","createRef","onClickDismiss","current","closeSnackbar","autoHideDuration","maxSnack","action","Timesheet","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ff0f91b.chunk.js","sourcesContent":["const DARK_MODE = \"dark_mode\";\nconst LINES = \"lines\";\nconst IMPERATIVE = \"imperative\";\n\nexport function getItem(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport function setItem(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getDarkMode() {\n  return getItem(DARK_MODE);\n}\n\nexport function setDarkMode(value) {\n  return setItem(DARK_MODE, value);\n}\n\nexport function setLines(value) {\n  return setItem(LINES, value);\n}\n\nexport function getLines() {\n  return getItem(LINES);\n}\n\nexport function setImperative(value) {\n  return setItem(IMPERATIVE, value);\n}\n\nexport function getImperative() {\n  return getItem(IMPERATIVE);\n}\n\nexport default {\n  getItem,\n  setItem,\n  getDarkMode,\n  setDarkMode,\n  setLines,\n  getLines,\n  setImperative,\n  getImperative,\n};\n","export type Line = {\n  id: string;\n  title: string;\n  hours: string;\n};\n\nexport enum DownloadExtension {\n  TXT = \"txt\",\n  CSV = \"csv\",\n  PDF = \"pdf\",\n}\n","import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { useSnackbar } from \"notistack\";\n\nimport { Line } from \"../types\";\nimport StorageService from \"../services/StorageService\";\n\ntype StoreContextType = {\n  lines: Line[];\n  imperative: boolean;\n  handleChangeLine: any;\n  handleDeleteLine: any;\n  handleDeleteAllLines: any;\n  handleAddNewLine: any;\n  handleChangeImperative: any;\n};\n\nconst defaultLines: Line[] = [];\n\nconst StoreContext = React.createContext<Partial<StoreContextType>>({});\n\nconst StoreProvider = (props: any) => {\n  const { children } = props;\n\n  const { enqueueSnackbar } = useSnackbar();\n  const [lines, setLines] = React.useState(defaultLines);\n  const [imperative, setImperative] = React.useState(\n    StorageService.getImperative()\n  );\n\n  const fetchLines = () => {\n    const lines = StorageService.getLines();\n    if (lines && lines.length) {\n      setLines(lines);\n    }\n  };\n\n  const handleUpdateStorageLines = React.useCallback((lines) => {\n    StorageService.setLines(lines);\n  }, []);\n\n  const handleAddNewLine = React.useCallback(() => {\n    setLines((lines: Line[]) => {\n      const updatedLines = [...lines, { id: uuid(), title: \"\", hours: \"\" }];\n      handleUpdateStorageLines(updatedLines);\n      enqueueSnackbar(\"Line Added\", { variant: \"success\" });\n      return updatedLines;\n    });\n  }, [handleUpdateStorageLines, enqueueSnackbar]);\n\n  const handleDeleteAllLines = React.useCallback(() => {\n    setLines([]);\n    handleUpdateStorageLines([]);\n    enqueueSnackbar(\"All Line Deleted\");\n  }, [handleUpdateStorageLines, enqueueSnackbar]);\n\n  const handleDeleteLine = React.useCallback(\n    (event, line) => {\n      setLines((lines) => {\n        const updatedLines = lines.filter((l) => l.id !== line.id);\n        handleUpdateStorageLines(updatedLines);\n        enqueueSnackbar(\"Line Deleted\");\n        return updatedLines;\n      });\n    },\n    [handleUpdateStorageLines, enqueueSnackbar]\n  );\n\n  const handleChangeLine = React.useCallback(\n    (event, line) => {\n      const { name, value } = event.target;\n\n      const declarativeTimeRegex = /^\\d*\\.?[0-5]?((?<=[0-5])[0-9]?)?$/;\n      const imperativeTimeRegex = /^\\d*\\.?\\d*$/;\n\n      const timeRegex = imperative ? imperativeTimeRegex : declarativeTimeRegex;\n\n      if (name === \"hours\" && !timeRegex.test(value)) {\n        return;\n      }\n\n      setLines((lines) => {\n        const updatedLines = lines.map((l) =>\n          l.id === line.id ? { ...line, [name]: value } : l\n        );\n        handleUpdateStorageLines(updatedLines);\n        return updatedLines;\n      });\n    },\n    [imperative, handleUpdateStorageLines]\n  );\n\n  const handleChangeImperative = React.useCallback((event) => {\n    const { checked } = event.target;\n    setImperative(checked);\n    StorageService.setImperative(checked);\n  }, []);\n\n  React.useEffect(() => fetchLines(), []);\n\n  const value = React.useMemo(\n    () => ({\n      lines,\n      imperative,\n      handleChangeLine,\n      handleDeleteLine,\n      handleDeleteAllLines,\n      handleAddNewLine,\n      handleChangeImperative,\n    }),\n    [\n      lines,\n      imperative,\n      handleChangeLine,\n      handleDeleteLine,\n      handleDeleteAllLines,\n      handleAddNewLine,\n      handleChangeImperative,\n    ]\n  );\n\n  return (\n    <StoreContext.Provider value={value}>{children}</StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => React.useContext(StoreContext);\n\nexport default StoreProvider;\n","import React from \"react\";\nimport MuiIconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport BrightnessIcon from \"@material-ui/icons/Brightness6\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst icons = {\n  info: InfoIcon,\n  brightness: BrightnessIcon,\n  download: SaveAltIcon,\n  delete: DeleteIcon,\n  question: HelpIcon,\n  add: AddIcon,\n};\n\ntype IconButtonProps = MuiIconButtonProps & { icon: keyof typeof icons };\n\nconst IconButton: React.FC<IconButtonProps> = React.forwardRef((props, ref) => {\n  const { icon, ...rest } = props;\n  const Icon = icons[icon];\n\n  return (\n    <MuiIconButton size=\"small\" ref={ref} {...rest}>\n      <Icon />\n    </MuiIconButton>\n  );\n});\n\nexport default IconButton;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Line } from \"../types\";\nimport IconButton from \"../components/IconButton\";\n\ntype TimesheetLineProps = {\n  line: Line;\n  onDelete: any;\n  onChange: any;\n};\n\nconst TimesheetLine: React.FC<TimesheetLineProps> = (props) => {\n  const { line, onDelete, onChange } = props;\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete(e, line);\n    },\n    [line, onDelete]\n  );\n\n  const handleChange = React.useCallback(\n    (e) => {\n      e.persist();\n      onChange(e, line);\n    },\n    [line, onChange]\n  );\n\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item xs={7} sm={9}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Title\"\n          name=\"title\"\n          value={line.title}\n          onChange={handleChange}\n          multiline\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={4} sm={2}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Hours\"\n          name=\"hours\"\n          value={line.hours}\n          onChange={handleChange}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={1} sm={1}>\n        <IconButton\n          icon=\"delete\"\n          color=\"secondary\"\n          onClick={handleDelete}\n        ></IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TimesheetLine;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TimesheetLine from \"./TimesheetLine\";\nimport { Line } from \"../types\";\n\ntype TimesheetLineListProps = {\n  lines: Line[];\n  onDelete: any;\n  onChange: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  listWrapper: {\n    padding: theme.spacing(),\n    height: `calc(100% - ${theme.spacing(6)}px)`,\n    overflow: \"auto\",\n  },\n}));\n\nconst TimesheetLineList: React.FC<TimesheetLineListProps> = (props) => {\n  const classes = useStyles();\n\n  const { lines, onDelete, onChange } = props;\n  return (\n    <Box className={classes.listWrapper}>\n      <Grid container spacing={1}>\n        {lines.map((line) => (\n          <Grid item xs={12} key={line.id}>\n            <TimesheetLine\n              line={line}\n              onDelete={onDelete}\n              onChange={onChange}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TimesheetLineList;\n","import React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport IconButton from \"./IconButton\";\n\ntype ImperativeTimeInfoProps = {};\n\nconst ImperativeTimeInfo: React.FC<ImperativeTimeInfoProps> = (props) => {\n  return (\n    <>\n      <Tooltip title=\"1 hour = 1.00; 30 mins = 0.50; 15 mins = 0.25; Or simply follow any other convention you needed.\">\n        <IconButton icon=\"question\"></IconButton>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default ImperativeTimeInfo;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport { useStore } from \"../providers/StoreProvider\";\nimport TimesheetLineList from \"../components/TimesheetLineList\";\nimport ImperativeTimeInfo from \"../components/ImperativeTimeInfo\";\n\ntype ListProps = {};\n\nconst useStyles = makeStyles((theme) => ({\n  button: { marginRight: theme.spacing() },\n  imperativeFormControl: {\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nconst List: React.FC<ListProps> = (props) => {\n  const classes = useStyles();\n\n  const {\n    lines = [],\n    imperative,\n    handleAddNewLine,\n    handleChangeLine,\n    handleDeleteLine,\n    handleDeleteAllLines,\n    handleChangeImperative,\n  } = useStore();\n\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = React.useState<\n    boolean\n  >(false);\n\n  const handleOpenConfirmationDialog = React.useCallback(() => {\n    setConfirmationDialogOpen(true);\n  }, []);\n\n  const handleCloseConfirmationDialog = React.useCallback(() => {\n    setConfirmationDialogOpen(false);\n  }, []);\n\n  const totalHours = lines.reduce(\n    (totalHours, line) => totalHours + (Number(line.hours) || 0),\n    0\n  );\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" height={40} marginBottom={1}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n          onClick={handleAddNewLine}\n        >\n          Add Line\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n          onClick={handleOpenConfirmationDialog}\n        >\n          Delete All Lines\n        </Button>\n        <Typography>\n          Total Hours : <b>{totalHours.toFixed(2)}</b>\n        </Typography>\n      </Box>\n      <Box display=\"flex\" alignItems=\"center\" height={40} marginBottom={1}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={imperative}\n              onChange={handleChangeImperative}\n              color=\"primary\"\n            />\n          }\n          classes={{ root: classes.imperativeFormControl }}\n          label=\"Imperative Time\"\n        />\n        &nbsp;\n        <ImperativeTimeInfo />\n      </Box>\n      <TimesheetLineList\n        lines={lines}\n        onDelete={handleDeleteLine}\n        onChange={handleChangeLine}\n      />\n      <Dialog\n        open={confirmationDialogOpen}\n        onClose={handleCloseConfirmationDialog}\n      >\n        <DialogTitle>Delete</DialogTitle>\n        <DialogContent>\n          <Typography>Do you want to delete all timesheet lines ?</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"small\" onClick={handleCloseConfirmationDialog}>\n            Cancel\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              handleDeleteAllLines();\n              handleCloseConfirmationDialog();\n            }}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Sheet from \"./Sheet\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    minHeight: theme.spacing(6),\n  },\n  main: {\n    padding: theme.spacing(2),\n    maxWidth: theme.spacing(70),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    height: `calc(100% - ${theme.spacing(12)}px)`,\n  },\n}));\n\ntype ContentProps = {};\n\nconst Content: React.FC<ContentProps> = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.toolbar} />\n      <Box component=\"main\" className={classes.main}>\n        <Sheet />\n      </Box>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\n\nimport IconButton from \"./IconButton\";\nimport { DownloadExtension } from \"../types\";\n\ntype DownloadIconButtonProps = IconButtonProps & {\n  onDownload: any;\n};\n\nconst DownloadIconButton: React.FC<DownloadIconButtonProps> = (props) => {\n  const { onDownload, ...rest } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDownloadTXT = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.TXT);\n  };\n\n  const handleDowloadCSV = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.CSV);\n  };\n\n  const handleDownloadPDF = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.PDF);\n  };\n\n  return (\n    <>\n      <IconButton\n        icon=\"download\"\n        {...rest}\n        onClick={handleOpenMenu}\n      ></IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={handleDownloadTXT}>TXT File</MenuItem>\n        <MenuItem onClick={handleDowloadCSV}>CSV File</MenuItem>\n        <MenuItem onClick={handleDownloadPDF}>PDF File</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default DownloadIconButton;\n","import React from \"react\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Popover, {\n  PopoverProps as InfoPopoverProps,\n} from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  popoverPaper: {\n    width: 400,\n    padding: theme.spacing(2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n  },\n  divider: {\n    marginBottom: theme.spacing(),\n  },\n  check: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst Check = () => {\n  const classes = useStyles();\n\n  return (\n    <span role=\"img\" aria-label=\"check\" className={classes.check}>\n      ✅\n    </span>\n  );\n};\n\nconst InfoPopover: React.FC<InfoPopoverProps> = (props) => {\n  const { open, anchorEl, onClose } = props;\n\n  const classes = useStyles();\n  return (\n    <Popover\n      open={open}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      PaperProps={{\n        className: classes.popoverPaper,\n      }}\n    >\n      <Typography gutterBottom>\n        Timesheet is a small application for managing daily task work time and\n        to evaluate total hours of work.\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Hassle-free access to your work sheet lines\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Instant overview of total hours done\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Download timesheet in txt, pdf and csv format\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography gutterBottom>\n        The application do not consume any consumer data and use local storage\n        for persisting the information. Timesheet is&nbsp;\n        <Link\n          color=\"primary\"\n          href=\"https://github.com/nishantpainter/timesheet\"\n          target=\"_blank\"\n        >\n          Open-source\n        </Link>\n        . Pull request are welcome!\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography>\n        Developed By :&nbsp;\n        <Link\n          color=\"primary\"\n          href=\"https://nishantpainter.github.io/\"\n          target=\"_blank\"\n        >\n          Nishant Painter\n        </Link>\n      </Typography>\n    </Popover>\n  );\n};\n\nexport default InfoPopover;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport teal from \"@material-ui/core/colors/teal\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\n\nimport StorageService from \"../services/StorageService\";\n\nconst ThemeContext = React.createContext({});\n\ntype ThemeProviderProps = {};\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\n  const { children } = props;\n\n  const [darkTheme, setDarkTheme] = React.useState(\n    StorageService.getDarkMode()\n  );\n\n  const handleToggleDarkTheme = React.useCallback(() => {\n    setDarkTheme((darkTheme: Boolean) => {\n      StorageService.setDarkMode(!darkTheme);\n      return !darkTheme;\n    });\n  }, []);\n\n  const theme: Theme = createMuiTheme({\n    palette: {\n      type: darkTheme ? \"dark\" : \"light\",\n      primary: teal,\n      secondary: blueGrey,\n    },\n  });\n\n  const value = React.useMemo(\n    () => ({\n      handleToggleDarkTheme,\n    }),\n    [handleToggleDarkTheme]\n  );\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): any => React.useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport moment from \"moment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsPDF } from \"jspdf\";\n\nimport DownloadIconButton from \"../components/DownloadIconButton\";\nimport IconButton from \"../components/IconButton\";\nimport InfoPopover from \"../components/InfoPopover\";\nimport { useTheme } from \"../providers/ThemeProvider\";\nimport { useStore } from \"../providers/StoreProvider\";\nimport { DownloadExtension, Line } from \"../types\";\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\ntype ToolbarProps = {};\n\nconst getDate = () => moment(new Date()).format(\"DD-MMM-YYYY HH:mm:ss\");\n\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\n  const classes = useStyles();\n  const { handleToggleDarkTheme } = useTheme();\n\n  const { lines = [] } = useStore();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n  const [date, setDate] = React.useState(getDate());\n\n  const handleOpenInfo = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    },\n    []\n  );\n\n  const handleCloseInfo = React.useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleUpdateDate = React.useCallback(() => {\n    setDate(getDate());\n  }, []);\n\n  const handleDownloadFile = React.useCallback(\n    (blob: Blob, fileName: string) => {\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      link.click();\n    },\n    []\n  );\n\n  const handleGetDate = React.useCallback((format: string = \"DD MMM YYYY\") => {\n    return moment().format(format);\n  }, []);\n\n  const handleGetFileName = React.useCallback(\n    (extension: DownloadExtension) => {\n      return handleGetDate() + `.${extension.toLowerCase()}`;\n    },\n    [handleGetDate]\n  );\n\n  const handleGetFormattedText = React.useCallback(\n    (extension: DownloadExtension) => {\n      switch (extension) {\n        case DownloadExtension.PDF:\n        case DownloadExtension.TXT: {\n          const txt: string = lines.reduce(\n            (txt: string, line: Line): string => {\n              if (line.title || line.hours) {\n                txt += `${line.title || \"\"} - ${line.hours || \"0\"}\\n`;\n              }\n              return txt;\n            },\n            `Timesheet : ${handleGetDate()}\\n====================\\n`\n          );\n          return txt;\n        }\n        case DownloadExtension.CSV: {\n          const txt: string = lines.reduce(\n            (txt: string, line: Line): string => {\n              if (line.title || line.hours) {\n                txt += `\"${line.title || \"\"}\",\"${line.hours || \"0\"}\"\\n`;\n              }\n              return txt;\n            },\n            '\"Title\",\"Hours\"\\n'\n          );\n          return txt;\n        }\n        default:\n          return \"\";\n      }\n    },\n    [lines, handleGetDate]\n  );\n\n  const handleDownloadTxt = React.useCallback(() => {\n    const txt = handleGetFormattedText(DownloadExtension.TXT);\n    const blob = new Blob([txt], { type: \"text/plain\" });\n    handleDownloadFile(blob, handleGetFileName(DownloadExtension.TXT));\n  }, [handleGetFormattedText, handleDownloadFile, handleGetFileName]);\n\n  const handleDownloadCsv = React.useCallback(() => {\n    const txt = handleGetFormattedText(DownloadExtension.CSV);\n    const blob = new Blob([txt], { type: \"text/plain\" });\n    handleDownloadFile(blob, handleGetFileName(DownloadExtension.CSV));\n  }, [handleGetFormattedText, handleDownloadFile, handleGetFileName]);\n\n  const handleDownloadPdf = React.useCallback(() => {\n    const txt = handleGetFormattedText(DownloadExtension.PDF);\n    const doc = new jsPDF();\n    doc.text(txt, 10, 10);\n    doc.save(handleGetFileName(DownloadExtension.PDF));\n  }, [handleGetFormattedText, handleGetFileName]);\n\n  const handleDownload = React.useCallback(\n    (fileType) => {\n      switch (fileType) {\n        case DownloadExtension.TXT:\n          handleDownloadTxt();\n          break;\n        case DownloadExtension.CSV:\n          handleDownloadCsv();\n          break;\n        case DownloadExtension.PDF:\n          handleDownloadPdf();\n          break;\n        default:\n          return;\n      }\n    },\n    [handleDownloadTxt, handleDownloadCsv, handleDownloadPdf]\n  );\n\n  React.useEffect(() => {\n    const interval = setInterval(handleUpdateDate, 1000);\n    return () => clearInterval(interval);\n  }, [handleUpdateDate]);\n\n  return (\n    <AppBar color=\"default\">\n      <MuiToolbar variant=\"dense\">\n        <Box display=\"flex\" flexGrow={1} alignItems=\"center\">\n          <Typography color=\"primary\">\n            <b>TIMESHEET</b>\n          </Typography>\n          &nbsp;&nbsp;\n          <Typography variant=\"body2\">\n            <b>{date}</b>\n          </Typography>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconButton\n            icon=\"brightness\"\n            color=\"primary\"\n            className={classes.iconButton}\n            onClick={handleToggleDarkTheme}\n          />\n          <DownloadIconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            onDownload={handleDownload}\n          />\n          <IconButton icon=\"info\" color=\"secondary\" onClick={handleOpenInfo} />\n        </Box>\n        <InfoPopover\n          open={Boolean(anchorEl)}\n          anchorEl={anchorEl}\n          onClose={handleCloseInfo}\n        />\n      </MuiToolbar>\n    </AppBar>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { SnackbarProvider as NotiStackProvider } from \"notistack\";\n\ntype SnackbarProviderProps = {};\n\nconst SnackbarProvider: React.FC<SnackbarProviderProps> = (props) => {\n  const { children } = props;\n\n  const notistackRef: any = React.createRef();\n\n  const onClickDismiss = (key: any) => () => {\n    notistackRef.current.closeSnackbar(key);\n  };\n\n  return (\n    <NotiStackProvider\n      autoHideDuration={2000}\n      maxSnack={3}\n      ref={notistackRef}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\",\n      }}\n      action={(key) => (\n        <Button color=\"inherit\" size=\"small\" onClick={onClickDismiss(key)}>\n          Dismiss\n        </Button>\n      )}\n    >\n      {children}\n    </NotiStackProvider>\n  );\n};\n\nexport default SnackbarProvider;\n","import React from \"react\";\n\nimport Content from \"./containers/Content\";\nimport Toolbar from \"./containers/Toolbar\";\nimport ThemeProvider from \"./providers/ThemeProvider\";\nimport StoreProvider from \"./providers/StoreProvider\";\nimport SnackbarProvider from \"./providers/SnackbarProvider\";\n\ntype TimeSheetProps = {};\n\nconst Timesheet: React.FC<TimeSheetProps> = () => {\n  return (\n    <ThemeProvider>\n      <SnackbarProvider>\n        <StoreProvider>\n          <Toolbar />\n          <Content />\n        </StoreProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default Timesheet;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Timesheet from \"./Timesheet\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Timesheet />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}