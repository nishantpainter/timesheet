{"version":3,"sources":["Timesheet/services/StorageService.js","Timesheet/types/index.tsx","Timesheet/providers/StoreProvider.tsx","Timesheet/components/IconButton.tsx","Timesheet/components/TimesheetLine.tsx","Timesheet/components/TimesheetLineList.tsx","Timesheet/components/ImperativeTimeInfo.tsx","Timesheet/containers/Sheet.tsx","Timesheet/containers/Content.tsx","Timesheet/components/DownloadIconButton.tsx","Timesheet/components/InfoPopover.tsx","Timesheet/providers/ThemeProvider.tsx","Timesheet/containers/Toolbar.tsx","Timesheet/providers/SnackbarProvider.tsx","Timesheet/index.tsx","serviceWorker.ts","index.tsx"],"names":["getItem","key","JSON","parse","localStorage","setItem","value","stringify","DownloadExtension","getDarkMode","setDarkMode","setLines","getLines","setImperative","getImperative","defaultLines","StoreContext","React","createContext","StoreProvider","props","children","useState","lines","StorageService","imperative","handleAddNewLine","useCallback","id","uuid","title","hours","handleDeleteAllLines","handleDeleteLine","event","line","filter","l","handleChangeLine","target","name","test","map","handleChangeImperative","checked","useEffect","length","fetchLines","useMemo","Provider","icons","info","InfoIcon","brightness","BrightnessIcon","download","SaveAltIcon","delete","DeleteIcon","question","HelpIcon","IconButton","forwardRef","ref","icon","rest","Icon","size","TimesheetLine","onDelete","onChange","handleDelete","e","handleChange","persist","Grid","container","spacing","alignItems","item","xs","sm","TextField","variant","placeholder","fullWidth","color","onClick","useStyles","makeStyles","theme","listWrapper","padding","height","overflow","TimesheetLineList","classes","Box","className","ImperativeTimeInfo","Tooltip","button","marginRight","imperativeFormControl","List","useContext","totalHours","reduce","Number","display","marginBottom","Button","Typography","toFixed","FormControlLabel","control","Checkbox","root","label","toolbar","minHeight","main","maxWidth","marginLeft","Content","component","Sheet","DownloadIconButton","onDownload","anchorEl","setAnchorEl","handleCloseMenu","currentTarget","Menu","open","Boolean","onClose","MenuItem","disabled","preventDefault","TXT","CSV","PDF","popoverPaper","width","link","palette","primary","divider","check","text","Check","role","aria-label","InfoPopover","Popover","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","gutterBottom","Divider","light","Link","href","ThemeContext","ThemeProvider","darkTheme","setDarkTheme","handleToggleDarkTheme","createMuiTheme","type","teal","secondary","blueGrey","CssBaseline","iconButton","getDate","moment","Date","format","Toolbar","date","setDate","handleOpenInfo","handleCloseInfo","handleUpdateDate","handleDownloadTxt","handleDownloadCsv","handleDownloadPdf","handleDownload","fileType","interval","setInterval","clearInterval","AppBar","flexGrow","SnackbarProvider","maxSnack","Timesheet","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7560c5dd.chunk.js","sourcesContent":["const DARK_MODE = \"dark_mode\";\nconst LINES = \"lines\";\nconst IMPERATIVE = \"imperative\";\n\nexport function getItem(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport function setItem(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getDarkMode() {\n  return getItem(DARK_MODE);\n}\n\nexport function setDarkMode(value) {\n  return setItem(DARK_MODE, value);\n}\n\nexport function setLines(value) {\n  return setItem(LINES, value);\n}\n\nexport function getLines() {\n  return getItem(LINES);\n}\n\nexport function setImperative(value) {\n  return setItem(IMPERATIVE, value);\n}\n\nexport function getImperative() {\n  return getItem(IMPERATIVE);\n}\n\nexport default {\n  getItem,\n  setItem,\n  getDarkMode,\n  setDarkMode,\n  setLines,\n  getLines,\n  setImperative,\n  getImperative,\n};\n","export type Line = {\n  id: string;\n  title: string;\n  hours: string;\n};\n\nexport enum DownloadExtension {\n  TXT = \"txt\",\n  CSV = \"csv\",\n  PDF = \"pdf\",\n}\n","import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nimport { Line } from \"../types\";\nimport StorageService from \"../services/StorageService\";\n\ntype StoreContextType = {\n  lines: Line[];\n  imperative: boolean;\n  handleChangeLine: any;\n  handleDeleteLine: any;\n  handleDeleteAllLines: any;\n  handleAddNewLine: any;\n  handleChangeImperative: any;\n};\n\nconst defaultLines: Line[] = [];\n\nconst StoreContext = React.createContext<Partial<StoreContextType>>({});\n\nconst StoreProvider = (props: any) => {\n  const { children } = props;\n  const [lines, setLines] = React.useState(defaultLines);\n  const [imperative, setImperative] = React.useState(\n    StorageService.getImperative()\n  );\n\n  const fetchLines = () => {\n    const lines = StorageService.getLines();\n    if (lines && lines.length) {\n      setLines(lines);\n    }\n  };\n\n  const handleAddNewLine = React.useCallback(() => {\n    setLines((lines: Line[]) => [\n      ...lines,\n      { id: uuid(), title: \"\", hours: \"\" },\n    ]);\n  }, []);\n\n  const handleDeleteAllLines = React.useCallback(() => {\n    setLines([]);\n  }, []);\n\n  const handleDeleteLine = React.useCallback((event, line) => {\n    setLines((lines) => lines.filter((l) => l.id !== line.id));\n  }, []);\n\n  const handleChangeLine = React.useCallback(\n    (event, line) => {\n      const { name, value } = event.target;\n\n      const declarativeTimeRegex = /^\\d*\\.?[0-5]?((?<=[0-5])[0-9]?)?$/;\n      const imperativeTimeRegex = /^\\d*\\.?\\d*$/;\n\n      const timeRegex = imperative ? imperativeTimeRegex : declarativeTimeRegex;\n\n      if (name === \"hours\" && !timeRegex.test(value)) {\n        return;\n      }\n\n      setLines((lines) => {\n        return lines.map((l) =>\n          l.id === line.id ? { ...line, [name]: value } : l\n        );\n      });\n    },\n    [imperative]\n  );\n\n  const handleChangeImperative = React.useCallback((event) => {\n    const { checked } = event.target;\n    setImperative(checked);\n    StorageService.setImperative(checked);\n  }, []);\n\n  React.useEffect(() => fetchLines(), []);\n\n  const value = React.useMemo(\n    () => ({\n      lines,\n      imperative,\n      handleChangeLine,\n      handleDeleteLine,\n      handleDeleteAllLines,\n      handleAddNewLine,\n      handleChangeImperative,\n    }),\n    [\n      lines,\n      imperative,\n      handleChangeLine,\n      handleDeleteLine,\n      handleDeleteAllLines,\n      handleAddNewLine,\n      handleChangeImperative,\n    ]\n  );\n\n  return (\n    <StoreContext.Provider value={value}>{children}</StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => React.useContext(StoreContext);\n\nexport default StoreProvider;\n","import React from \"react\";\nimport MuiIconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport BrightnessIcon from \"@material-ui/icons/Brightness6\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nconst icons = {\n  info: InfoIcon,\n  brightness: BrightnessIcon,\n  download: SaveAltIcon,\n  delete: DeleteIcon,\n  question: HelpIcon,\n};\n\ntype IconButtonProps = MuiIconButtonProps & { icon: keyof typeof icons };\n\nconst IconButton: React.FC<IconButtonProps> = React.forwardRef((props, ref) => {\n  const { icon, ...rest } = props;\n  const Icon = icons[icon];\n\n  return (\n    <MuiIconButton size=\"small\" ref={ref} {...rest}>\n      <Icon />\n    </MuiIconButton>\n  );\n});\n\nexport default IconButton;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Line } from \"../types\";\nimport IconButton from \"../components/IconButton\";\n\ntype TimesheetLineProps = {\n  line: Line;\n  onDelete: any;\n  onChange: any;\n};\n\nconst TimesheetLine: React.FC<TimesheetLineProps> = (props) => {\n  const { line, onDelete, onChange } = props;\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete(e, line);\n    },\n    [line, onDelete]\n  );\n\n  const handleChange = React.useCallback(\n    (e) => {\n      e.persist();\n      onChange(e, line);\n    },\n    [line, onChange]\n  );\n\n  return (\n    <Grid container spacing={1} alignItems=\"center\">\n      <Grid item xs={7} sm={9}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Title\"\n          name=\"title\"\n          value={line.title}\n          onChange={handleChange}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={4} sm={2}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"Hours\"\n          name=\"hours\"\n          value={line.hours}\n          onChange={handleChange}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={1} sm={1}>\n        <IconButton\n          icon=\"delete\"\n          color=\"secondary\"\n          onClick={handleDelete}\n        ></IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TimesheetLine;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TimesheetLine from \"./TimesheetLine\";\nimport { Line } from \"../types\";\n\ntype TimesheetLineListProps = {\n  lines: Line[];\n  onDelete: any;\n  onChange: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  listWrapper: {\n    padding: theme.spacing(),\n    height: `calc(100% - ${theme.spacing(6)}px)`,\n    overflow: \"auto\",\n  },\n}));\n\nconst TimesheetLineList: React.FC<TimesheetLineListProps> = (props) => {\n  const classes = useStyles();\n\n  const { lines, onDelete, onChange } = props;\n  return (\n    <Box className={classes.listWrapper}>\n      <Grid container spacing={1}>\n        {lines.map((line) => (\n          <Grid item xs={12} key={line.id}>\n            <TimesheetLine\n              line={line}\n              onDelete={onDelete}\n              onChange={onChange}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TimesheetLineList;\n","import React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport IconButton from \"./IconButton\";\n\ntype ImperativeTimeInfoProps = {};\n\nconst ImperativeTimeInfo: React.FC<ImperativeTimeInfoProps> = (props) => {\n  return (\n    <>\n      <Tooltip title=\"1 hour = 1.00; 30 mins = 0.50; 15 mins = 0.25;\">\n        <IconButton icon=\"question\"></IconButton>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default ImperativeTimeInfo;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { useStore } from \"../providers/StoreProvider\";\nimport TimesheetLineList from \"../components/TimesheetLineList\";\nimport ImperativeTimeInfo from \"../components/ImperativeTimeInfo\";\n\ntype ListProps = {};\n\nconst useStyles = makeStyles((theme) => ({\n  button: { marginRight: theme.spacing() },\n  imperativeFormControl: {\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nconst List: React.FC<ListProps> = (props) => {\n  const classes = useStyles();\n\n  const {\n    lines = [],\n    imperative,\n    handleAddNewLine,\n    handleChangeLine,\n    handleDeleteLine,\n    handleDeleteAllLines,\n    handleChangeImperative,\n  } = useStore();\n\n  const totalHours = lines.reduce(\n    (totalHours, line) => totalHours + Number(line.hours || 0),\n    0\n  );\n\n  return (\n    <>\n      <Box display=\"flex\" alignItems=\"center\" height={40} marginBottom={1}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n          onClick={handleAddNewLine}\n        >\n          Add Line\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"small\"\n          className={classes.button}\n          onClick={handleDeleteAllLines}\n        >\n          Delete All Lines\n        </Button>\n        <Typography>\n          Total Hours : <b>{totalHours.toFixed(2)}</b>\n        </Typography>\n      </Box>\n      <Box display=\"flex\" alignItems=\"center\" height={40} marginBottom={1}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={imperative}\n              onChange={handleChangeImperative}\n              color=\"primary\"\n            />\n          }\n          classes={{ root: classes.imperativeFormControl }}\n          label=\"Imperative Time\"\n        />\n        &nbsp;\n        <ImperativeTimeInfo />\n      </Box>\n      <TimesheetLineList\n        lines={lines}\n        onDelete={handleDeleteLine}\n        onChange={handleChangeLine}\n      />\n    </>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Sheet from \"./Sheet\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    minHeight: theme.spacing(6),\n  },\n  main: {\n    padding: theme.spacing(2),\n    maxWidth: theme.spacing(70),\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n    height: `calc(100% - ${theme.spacing(6)}px)`,\n  },\n}));\n\ntype ContentProps = {};\n\nconst Content: React.FC<ContentProps> = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.toolbar} />\n      <Box component=\"main\" className={classes.main}>\n        <Sheet />\n      </Box>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { IconButtonProps } from \"@material-ui/core/IconButton\";\n\nimport IconButton from \"./IconButton\";\nimport { DownloadExtension } from \"../types\";\n\ntype DownloadIconButtonProps = IconButtonProps & {\n  onDownload: any;\n};\n\nconst DownloadIconButton: React.FC<DownloadIconButtonProps> = (props) => {\n  const { onDownload, ...rest } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDownloadTXT = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.TXT);\n  };\n\n  const handleDowloadCSV = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.CSV);\n  };\n\n  const handleDownloadPDF = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    handleCloseMenu();\n    onDownload(DownloadExtension.PDF);\n  };\n\n  return (\n    <>\n      <IconButton\n        icon=\"download\"\n        {...rest}\n        onClick={handleOpenMenu}\n      ></IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem disabled onClick={handleDownloadTXT}>\n          TXT File\n        </MenuItem>\n        <MenuItem disabled onClick={handleDowloadCSV}>\n          CSV File\n        </MenuItem>\n        <MenuItem disabled onClick={handleDownloadPDF}>\n          PDF File\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default DownloadIconButton;\n","import React from \"react\";\n\nimport Link from \"@material-ui/core/Link\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Popover, {\n  PopoverProps as InfoPopoverProps,\n} from \"@material-ui/core/Popover\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  popoverPaper: {\n    width: 400,\n    padding: theme.spacing(2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n  },\n  divider: {\n    marginBottom: theme.spacing(),\n  },\n  check: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst Check = () => {\n  const classes = useStyles();\n\n  return (\n    <span role=\"img\" aria-label=\"check\" className={classes.check}>\n      ✅\n    </span>\n  );\n};\n\nconst InfoPopover: React.FC<InfoPopoverProps> = (props) => {\n  const { open, anchorEl, onClose } = props;\n\n  const classes = useStyles();\n  return (\n    <Popover\n      open={open}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n      PaperProps={{\n        className: classes.popoverPaper,\n      }}\n    >\n      <Typography gutterBottom>\n        Timesheet is a small application for managing daily task work time and\n        to evaluate total hours of work.\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Hassle-free access to your work sheet lines\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Instant overview of total hours done\n      </Typography>\n      <Typography color=\"secondary\" gutterBottom>\n        <Check />\n        &nbsp;Download timesheet in txt, pdf and csv format\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography gutterBottom>\n        The application do not consume any consumer data and use local storage\n        for persisting the information. Timesheet is&nbsp;\n        <Link color=\"primary\" href=\"#\">\n          Open-source\n        </Link>\n        . Pull request are welcome!\n      </Typography>\n      <Divider className={classes.divider} light />\n      <Typography>\n        Developed By :&nbsp;\n        <Link\n          color=\"primary\"\n          href=\"https://nishantpainter.github.io/\"\n          target=\"_blank\"\n        >\n          Nishant Painter\n        </Link>\n      </Typography>\n    </Popover>\n  );\n};\n\nexport default InfoPopover;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport teal from \"@material-ui/core/colors/teal\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\n\nimport StorageService from \"../services/StorageService\";\n\nconst ThemeContext = React.createContext({});\n\ntype ThemeProviderProps = {};\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\n  const { children } = props;\n\n  const [darkTheme, setDarkTheme] = React.useState(\n    StorageService.getDarkMode()\n  );\n\n  const handleToggleDarkTheme = React.useCallback(() => {\n    setDarkTheme((darkTheme: Boolean) => {\n      StorageService.setDarkMode(!darkTheme);\n      return !darkTheme;\n    });\n  }, []);\n\n  const theme: Theme = createMuiTheme({\n    palette: {\n      type: darkTheme ? \"dark\" : \"light\",\n      primary: teal,\n      secondary: blueGrey,\n    },\n  });\n\n  const value = React.useMemo(\n    () => ({\n      handleToggleDarkTheme,\n    }),\n    [handleToggleDarkTheme]\n  );\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): any => React.useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport moment from \"moment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport DownloadIconButton from \"../components/DownloadIconButton\";\nimport IconButton from \"../components/IconButton\";\nimport InfoPopover from \"../components/InfoPopover\";\nimport { useTheme } from \"../providers/ThemeProvider\";\nimport { DownloadExtension } from \"../types\";\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\ntype ToolbarProps = {};\n\nconst getDate = () => moment(new Date()).format(\"DD-MMM-YYYY HH:mm:ss\");\n\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\n  const classes = useStyles();\n  const { handleToggleDarkTheme } = useTheme();\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n  const [date, setDate] = React.useState(getDate());\n\n  const handleOpenInfo = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    },\n    []\n  );\n\n  const handleCloseInfo = React.useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleUpdateDate = React.useCallback(() => {\n    setDate(getDate());\n  }, []);\n\n  const handleDownloadTxt = React.useCallback((lines) => {}, []);\n\n  const handleDownloadCsv = React.useCallback((lines) => {}, []);\n\n  const handleDownloadPdf = React.useCallback((lines) => {}, []);\n\n  const handleDownload = React.useCallback(\n    (fileType) => {\n      switch (fileType) {\n        case DownloadExtension.TXT:\n          handleDownloadTxt([]);\n          break;\n        case DownloadExtension.CSV:\n          handleDownloadCsv([]);\n          break;\n        case DownloadExtension.PDF:\n          handleDownloadPdf([]);\n          break;\n        default:\n          return;\n      }\n    },\n    [handleDownloadTxt, handleDownloadCsv, handleDownloadPdf]\n  );\n\n  React.useEffect(() => {\n    const interval = setInterval(handleUpdateDate, 1000);\n    return () => clearInterval(interval);\n  }, [handleUpdateDate]);\n\n  return (\n    <AppBar color=\"default\">\n      <MuiToolbar variant=\"dense\">\n        <Box display=\"flex\" flexGrow={1} alignItems=\"center\">\n          <Typography color=\"primary\">\n            <b>TIMESHEET</b>\n          </Typography>\n          &nbsp;&nbsp;\n          <Typography variant=\"body2\">\n            <b>{date}</b>\n          </Typography>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconButton\n            icon=\"brightness\"\n            color=\"primary\"\n            className={classes.iconButton}\n            onClick={handleToggleDarkTheme}\n          />\n          <DownloadIconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            onDownload={handleDownload}\n          />\n          <IconButton icon=\"info\" color=\"secondary\" onClick={handleOpenInfo} />\n        </Box>\n        <InfoPopover\n          open={Boolean(anchorEl)}\n          anchorEl={anchorEl}\n          onClose={handleCloseInfo}\n        />\n      </MuiToolbar>\n    </AppBar>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\nimport { SnackbarProvider as NotiStackProvider } from \"notistack\";\n\ntype SnackbarProviderProps = {};\n\nconst SnackbarProvider: React.FC<SnackbarProviderProps> = (props) => {\n  const { children } = props;\n\n  return (\n    <NotiStackProvider\n      maxSnack={3}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n    >\n      {children}\n    </NotiStackProvider>\n  );\n};\n\nexport default SnackbarProvider;\n","import React from \"react\";\n\nimport Content from \"./containers/Content\";\nimport Toolbar from \"./containers/Toolbar\";\nimport ThemeProvider from \"./providers/ThemeProvider\";\nimport StoreProvider from \"./providers/StoreProvider\";\nimport SnackbarProvider from \"./providers/SnackbarProvider\";\n\ntype TimeSheetProps = {};\n\nconst Timesheet: React.FC<TimeSheetProps> = () => {\n  return (\n    <ThemeProvider>\n      <SnackbarProvider>\n        <StoreProvider>\n          <Toolbar />\n          <Content />\n        </StoreProvider>\n      </SnackbarProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default Timesheet;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Timesheet from \"./Timesheet\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Timesheet />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}